def inject_context_menu(html_content):
    """
    Inject custom JavaScript for a context-sensitive menu into the Pyvis-generated HTML.

    Args:
        html_content (str): HTML content generated by Pyvis.

    Returns:
        str: Modified HTML content with custom JavaScript.
    """
    custom_script = """
    <script>
    // Create the context menu element
    const menu = document.createElement("div");
    menu.id = "context-menu";
    menu.style.position = "absolute";
    menu.style.display = "none";
    menu.style.background = "white";
    menu.style.border = "1px solid #ccc";
    menu.style.padding = "10px";
    menu.style.zIndex = "10000";
    document.body.appendChild(menu);

    // Variable to prevent the menu from repositioning
    let contextMenuOpen = false;

    // Event listener for right-click on nodes
    network.on("oncontext", function(params) {
        params.event.preventDefault();

        if (!contextMenuOpen) {
        contextMenuOpen = true;

        // Get node ID

        const nodeId = params.nodes[0];
        if (nodeId) {
            const node = network.body.data.nodes.get(nodeId);
            const nodeLabel = node.label;

            // Set menu content
            menu.innerHTML = `<strong>${nodeLabel}</strong><br>
            <button onclick="alert('Play ${nodeLabel}')">Play</button><br>
            <button onclick="alert('Details for ${nodeLabel}')">Details</button>`;

            // Position the menu
            menu.style.top = params.event.pageY + "px";
            menu.style.left = params.event.pageX + "px";
            menu.style.display = "block";
        }
        }
    });

    // Hide the menu when clicking elsewhere
    document.addEventListener("click", function() {
        menu.style.display = "none";
        contextMenuOpen = false; // Reset menu state
    });
    </script>
    """

    # Inject the script before the closing </body> tag
    return html_content.replace("</body>", custom_script + "</body>")
